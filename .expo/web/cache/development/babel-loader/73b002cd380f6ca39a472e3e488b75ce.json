{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\dev\\\\github-social\\\\screens\\\\Followers.js\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React, { useState, useEffect } from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { not } from 'react-native-reanimated';\nexport default function followers(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      followers = _useState2[0],\n      setFollowers = _useState2[1];\n\n  var user = navigation.state.params.user;\n  useEffect(function () {\n    loadData();\n  }, []);\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, React.createElement(ScrollView, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, followers.map(function (follower) {\n    return React.createElement(TouchableWithoutFeedback, {\n      key: follower.id,\n      onPress: function onPress() {\n        return navigation.push('followers', {\n          user: follower.login\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: {\n        flexDirection: 'row',\n        backgroundColor: 'ghostwhite'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 19\n      }\n    }, React.createElement(Image, {\n      source: {\n        uri: follower.avatar_url\n      },\n      style: styles.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 19\n      }\n    }), React.createElement(View, {\n      style: {\n        flex: 1,\n        flexDirection: 'column',\n        justifyContent: 'flex-start',\n        alignItems: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 19\n      }\n    }, React.createElement(Text, {\n      style: styles.username,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }\n    }, follower.login), React.createElement(Text, {\n      style: styles.bio,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }\n    }, follower.bio))));\n  })));\n\n  function loadData() {\n    var data, _iterator, _step, follower;\n\n    return _regeneratorRuntime.async(function loadData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch(\"https://api.github.com/users/\" + user + \"/followers\").then(function (res) {\n              return res.json();\n            }));\n\n          case 2:\n            data = _context.sent;\n            console.log(data);\n\n            if (!data.message) {\n              _context.next = 7;\n              break;\n            }\n\n            console.log(\"FILHA DA PUTA reeee\");\n            return _context.abrupt(\"return\", React.createElement(View, {\n              style: {\n                backgroundColor: 'white'\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 15\n              }\n            }, React.createElement(Text, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 19\n              }\n            }, \"User not Found!\")));\n\n          case 7:\n            _iterator = _createForOfIteratorHelperLoose(data);\n\n          case 8:\n            if ((_step = _iterator()).done) {\n              _context.next = 15;\n              break;\n            }\n\n            follower = _step.value;\n            _context.next = 12;\n            return _regeneratorRuntime.awrap(fetch(follower.url).then(function (data) {\n              return data.json();\n            }).then(function (data) {\n              return data.bio;\n            }));\n\n          case 12:\n            follower.bio = _context.sent;\n\n          case 13:\n            _context.next = 8;\n            break;\n\n          case 15:\n            setFollowers(data);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n}\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'black'\n  },\n  username: {\n    fontSize: 20,\n    textAlign: 'center'\n  },\n  bio: {\n    justifyContent: 'flex-start'\n  },\n  image: {\n    width: 100,\n    height: 100\n  }\n});","map":{"version":3,"sources":["D:/dev/github-social/screens/Followers.js"],"names":["React","useState","useEffect","not","followers","navigation","setFollowers","user","state","params","loadData","flex","styles","container","map","follower","id","push","login","flexDirection","backgroundColor","uri","avatar_url","image","justifyContent","alignItems","username","bio","fetch","then","res","json","data","console","log","message","url","StyleSheet","create","fontSize","textAlign","width","height"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;;;;;;AAEA,SAASC,GAAT,QAAoB,yBAApB;AAEA,eAAgB,SAASC,SAAT,OAAiC;AAAA,MAAbC,UAAa,QAAbA,UAAa;;AAAA,kBACXJ,QAAQ,CAAC,EAAD,CADG;AAAA;AAAA,MACtCG,SADsC;AAAA,MAC3BE,YAD2B;;AAE7C,MAAMC,IAAI,GAAGF,UAAU,CAACG,KAAX,CAAiBC,MAAjB,CAAwBF,IAArC;AACAL,EAAAA,SAAS,CAAC,YAAM;AACdQ,IAAAA,QAAQ;AACT,GAFQ,EAEP,EAFO,CAAT;AAGA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEC,MAAM,CAACC,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACET,SAAS,CAACU,GAAV,CAAc,UAACC,QAAD,EAAc;AAC1B,WACI,oBAAC,wBAAD;AAA2B,MAAA,GAAG,EAAEA,QAAQ,CAACC,EAAzC;AAA8C,MAAA,OAAO,EAAE;AAAA,eAAMX,UAAU,CAACY,IAAX,CAAgB,WAAhB,EAA6B;AAACV,UAAAA,IAAI,EAAGQ,QAAQ,CAACG;AAAjB,SAA7B,CAAN;AAAA,OAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAACC,QAAAA,aAAa,EAAE,KAAhB;AAAuBC,QAAAA,eAAe,EAAE;AAAxC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAE;AAACC,QAAAA,GAAG,EAAEN,QAAQ,CAACO;AAAf,OAAf;AAA2C,MAAA,KAAK,EAAEV,MAAM,CAACW,KAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEA,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAACZ,QAAAA,IAAI,EAAG,CAAR;AAAWQ,QAAAA,aAAa,EAAG,QAA3B;AAAqCK,QAAAA,cAAc,EAAG,YAAtD;AAAoEC,QAAAA,UAAU,EAAC;AAA/E,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEb,MAAM,CAACc,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+BX,QAAQ,CAACG,KAAxC,CADF,EAEE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEN,MAAM,CAACe,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0BZ,QAAQ,CAACY,GAAnC,CAFF,CAFA,CADF,CADJ;AAWD,GAZD,CADF,CAFF,CADF;;AAqBA,WAAejB,QAAf;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACqBkB,KAAK,CAAC,kCAAkCrB,IAAlC,GAAyC,YAA1C,CAAL,CAA6DsB,IAA7D,CAAkE,UAAAC,GAAG;AAAA,qBAAEA,GAAG,CAACC,IAAJ,EAAF;AAAA,aAArE,CADrB;;AAAA;AACQC,YAAAA,IADR;AAEEC,YAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AAFF,iBAGKA,IAAI,CAACG,OAHV;AAAA;AAAA;AAAA;;AAIMF,YAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AAJN,6CAMU,oBAAC,IAAD;AAAM,cAAA,KAAK,EAAE;AAACd,gBAAAA,eAAe,EAAC;AAAjB,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADJ,CANV;;AAAA;AAAA,wDAWsBY,IAXtB;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWUjB,YAAAA,QAXV;AAAA;AAAA,6CAYyBa,KAAK,CAACb,QAAQ,CAACqB,GAAV,CAAL,CAAoBP,IAApB,CAAyB,UAAAG,IAAI;AAAA,qBAAIA,IAAI,CAACD,IAAL,EAAJ;AAAA,aAA7B,EAA8CF,IAA9C,CAAmD,UAAAG,IAAI;AAAA,qBAAEA,IAAI,CAACL,GAAP;AAAA,aAAvD,CAZzB;;AAAA;AAYIZ,YAAAA,QAAQ,CAACY,GAZb;;AAAA;AAAA;AAAA;;AAAA;AAcErB,YAAAA,YAAY,CAAC0B,IAAD,CAAZ;;AAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBD;AAEH,IAAMpB,MAAM,GAAGyB,UAAU,CAACC,MAAX,CAAkB;AAC7BzB,EAAAA,SAAS,EAAE;AACTO,IAAAA,eAAe,EAAE;AADR,GADkB;AAI7BM,EAAAA,QAAQ,EAAE;AACRa,IAAAA,QAAQ,EAAE,EADF;AAERC,IAAAA,SAAS,EAAE;AAFH,GAJmB;AAQ7Bb,EAAAA,GAAG,EAAG;AACJH,IAAAA,cAAc,EAAC;AADX,GARuB;AAW7BD,EAAAA,KAAK,EAAE;AACLkB,IAAAA,KAAK,EAAE,GADF;AAELC,IAAAA,MAAM,EAAE;AAFH;AAXsB,CAAlB,CAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {Dimensions, StyleSheet, Text, View, ScrollView, Image, TouchableWithoutFeedback} from 'react-native';\r\nimport { not } from 'react-native-reanimated';\r\n\r\nexport default  function followers({navigation}) {\r\n    const [followers, setFollowers] = useState([]);\r\n    const user = navigation.state.params.user\r\n    useEffect(() => {\r\n      loadData()\r\n    },[]);\r\n    return (\r\n      <View style={{flex: 1}}>\r\n        \r\n        <ScrollView style={styles.container}>{\r\n          followers.map((follower) => {\r\n            return(\r\n                <TouchableWithoutFeedback  key={follower.id}  onPress={() => navigation.push('followers', {user : follower.login})}>\r\n                  <View style={{flexDirection: 'row', backgroundColor: 'ghostwhite'}}>\r\n                  <Image source={{uri: follower.avatar_url}} style={styles.image}/>\r\n                  <View style={{flex : 1, flexDirection : 'column', justifyContent : 'flex-start', alignItems:'center'}}>\r\n                    <Text style={styles.username}>{follower.login}</Text>\r\n                    <Text style={styles.bio}>{follower.bio}</Text>\r\n                  </View>\r\n                  </View>\r\n                </TouchableWithoutFeedback>\r\n            )\r\n          })\r\n        }</ScrollView>\r\n      </View>\r\n    );\r\n  \r\n    async function loadData() {\r\n      const data = await fetch(\"https://api.github.com/users/\" + user + \"/followers\").then(res=>res.json())\r\n      console.log(data)\r\n      if(data.message) {\r\n          console.log(\"FILHA DA PUTA reeee\")\r\n          return(\r\n              <View style={{backgroundColor:'white'}}>\r\n                  <Text>User not Found!</Text>\r\n              </View>\r\n          );\r\n      }\r\n      for(let follower of data) {\r\n        follower.bio = await fetch(follower.url).then(data => data.json()).then(data=>data.bio)\r\n      }\r\n      setFollowers(data)\r\n    }\r\n  }\r\n  \r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      backgroundColor: 'black',\r\n    },\r\n    username: {\r\n      fontSize: 20,\r\n      textAlign: 'center',\r\n    },\r\n    bio : {\r\n      justifyContent:'flex-start',\r\n    },\r\n    image: {\r\n      width: 100,\r\n      height: 100,\r\n    }\r\n  });"]},"metadata":{},"sourceType":"module"}