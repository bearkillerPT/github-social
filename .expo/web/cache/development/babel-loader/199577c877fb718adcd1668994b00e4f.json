{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\dev\\\\github-social\\\\screens\\\\Search.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Button from \"react-native-web/dist/exports/Button\";\nexport default function search(screenProps) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      userSearch = _useState2[0],\n      setUser = _useState2[1];\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, \"Search for a user: \"), React.createElement(View, {\n    style: styles.rowContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    style: styles.search,\n    onChangeText: function onChangeText(user) {\n      setUser(user);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    onPress: function onPress() {\n      checkUser(userSearch);\n    },\n    title: \"Search!\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  })));\n\n  function checkUser(user) {\n    var res;\n    return _regeneratorRuntime.async(function checkUser$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch(\"https://api.github.com/users/\" + user).then(function (res) {\n              return res.json();\n            }));\n\n          case 2:\n            res = _context.sent;\n            console.log(res.message != \"Not Found\");\n            if (res.message != \"Not Found\") screenProps.navigation.push('followers', {\n              user: user\n            });\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n}\nvar styles = StyleSheet.create({\n  search: {\n    backgroundColor: 'black',\n    flex: 3\n  },\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  rowContainer: {\n    flexDirection: 'row',\n    flex: 1\n  }\n});","map":{"version":3,"sources":["D:/dev/github-social/screens/Search.js"],"names":["React","useState","search","screenProps","userSearch","setUser","styles","container","rowContainer","user","checkUser","fetch","then","res","json","console","log","message","navigation","push","StyleSheet","create","backgroundColor","flex","justifyContent","alignItems","flexDirection"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;;AAGA,eAAe,SAASC,MAAT,CAAgBC,WAAhB,EAA6B;AAAA,kBACVF,QAAQ,CAAC,EAAD,CADE;AAAA;AAAA,MACjCG,UADiC;AAAA,MACrBC,OADqB;;AAExC,SACA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEF,MAAM,CAACJ,MAAzB;AAAiC,IAAA,YAAY,EAAE,sBAACO,IAAD,EAAU;AAACJ,MAAAA,OAAO,CAACI,IAAD,CAAP;AAAc,KAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,mBAAM;AAACC,MAAAA,SAAS,CAACN,UAAD,CAAT;AAAsB,KAA9C;AAAgD,IAAA,KAAK,EAAC,SAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAFJ,CADA;;AASA,WAAeM,SAAf,CAAyBD,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACsBE,KAAK,CAAC,kCAAkCF,IAAnC,CAAL,CAA8CG,IAA9C,CAAmD,UAAAC,GAAG;AAAA,qBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,aAAtD,CADtB;;AAAA;AACUD,YAAAA,GADV;AAEIE,YAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,OAAJ,IAAe,WAA3B;AACA,gBAAGJ,GAAG,CAACI,OAAJ,IAAe,WAAlB,EAA+Bd,WAAW,CAACe,UAAZ,CAAuBC,IAAvB,CAA4B,WAA5B,EAAyC;AAACV,cAAAA,IAAI,EAAEA;AAAP,aAAzC;;AAHnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKH;AAED,IAAMH,MAAM,GAAGc,UAAU,CAACC,MAAX,CAAkB;AAC7BnB,EAAAA,MAAM,EAAE;AACJoB,IAAAA,eAAe,EAAE,OADb;AAEJC,IAAAA,IAAI,EAAE;AAFF,GADqB;AAK7BhB,EAAAA,SAAS,EAAE;AACPiB,IAAAA,cAAc,EAAE,QADT;AAEPC,IAAAA,UAAU,EAAE;AAFL,GALkB;AAS7BjB,EAAAA,YAAY,EAAE;AACVkB,IAAAA,aAAa,EAAE,KADL;AAEVH,IAAAA,IAAI,EAAE;AAFI;AATe,CAAlB,CAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport {StyleSheet, Text, View, TextInput, Image, TouchableWithoutFeedback, Button} from 'react-native';\r\n\r\nexport default function search(screenProps) {\r\n    const [userSearch, setUser] = useState('');\r\n    return(\r\n    <View style={styles.container}>\r\n        <Text>Search for a user: </Text>\r\n        <View style={styles.rowContainer}>\r\n            <TextInput style={styles.search} onChangeText={(user) => {setUser(user)}}/>\r\n            <Button onPress={() => {checkUser(userSearch)}} title='Search!'/>\r\n        </View>\r\n    </View>);\r\n\r\n    async function checkUser(user) {\r\n        const res = await fetch(\"https://api.github.com/users/\" + user).then(res => res.json())\r\n        console.log(res.message != \"Not Found\")\r\n        if(res.message != \"Not Found\") screenProps.navigation.push('followers', {user: user})\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    search: {\r\n        backgroundColor: 'black',\r\n        flex: 3\r\n    },\r\n    container: {\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    rowContainer: {\r\n        flexDirection: 'row',\r\n        flex: 1\r\n    }\r\n\r\n})"]},"metadata":{},"sourceType":"module"}