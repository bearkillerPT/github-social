{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\dev\\\\github-social\\\\App.js\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect } from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { createAppContainer } from 'react-navigation';\nimport { createStackNavigator } from 'react-navigation-stack';\nimport Header from \"./components/Header\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    height = _Dimensions$get.height;\n\nfunction followers(screenProps) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      followers = _useState2[0],\n      setFollowers = _useState2[1];\n\n  var user = screenProps.navigation.state.params.user;\n  useEffect(function () {\n    loadData();\n  }, []);\n  console.log(navigator);\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, React.createElement(Header, {\n    headerTitle: \"Github Social Club\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }), React.createElement(ScrollView, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, followers.map(function (follower) {\n    return React.createElement(View, {\n      key: follower.id,\n      style: {\n        flexDirection: 'row',\n        backgroundColor: 'ghostwhite'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, React.createElement(TouchableWithoutFeedback, {\n      onPress: function onPress() {\n        return screenProps.navigation.navigate('Home', {\n          user: follower.login\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 15\n      }\n    }, React.createElement(Image, {\n      source: {\n        uri: follower.avatar_url\n      },\n      style: styles.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }\n    }), React.createElement(View, {\n      style: {\n        flex: 1,\n        flexDirection: 'column',\n        justifyContent: 'flex-start',\n        alignItems: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: styles.username,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 19\n      }\n    }, follower.login), React.createElement(Text, {\n      style: styles.bio,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 19\n      }\n    }, follower.bio))));\n  })));\n\n  function loadData() {\n    var data, _iterator, _step, follower;\n\n    return _regeneratorRuntime.async(function loadData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch(\"https://api.github.com/users/\" + user + \"/followers\").then(function (res) {\n              return res.json();\n            }));\n\n          case 2:\n            data = _context.sent;\n            _iterator = _createForOfIteratorHelperLoose(data);\n\n          case 4:\n            if ((_step = _iterator()).done) {\n              _context.next = 11;\n              break;\n            }\n\n            follower = _step.value;\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(fetch(follower.url).then(function (data) {\n              return data.json();\n            }).then(function (data) {\n              return data.bio;\n            }));\n\n          case 8:\n            follower.bio = _context.sent;\n\n          case 9:\n            _context.next = 4;\n            break;\n\n          case 11:\n            setFollowers(data);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n}\n\nvar AppNavigator = createStackNavigator({\n  Home: {\n    screen: followers,\n    params: {\n      user: 'Unn4m3DD'\n    }\n  }\n}, {\n  headerMode: 'none',\n  navigationOptions: {\n    headerVisible: false\n  },\n  initialRoute: 'Home'\n});\nvar App = createAppContainer(AppNavigator);\nexport default App;\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'black'\n  },\n  username: {\n    fontSize: 20,\n    textAlign: 'center'\n  },\n  bio: {\n    justifyContent: 'flex-start'\n  },\n  image: {\n    width: 100,\n    height: 100\n  }\n});","map":{"version":3,"sources":["D:/dev/github-social/App.js"],"names":["StatusBar","React","useState","useEffect","createAppContainer","createStackNavigator","Header","Dimensions","get","height","followers","screenProps","setFollowers","user","navigation","state","params","loadData","console","log","navigator","flex","styles","container","map","follower","id","flexDirection","backgroundColor","navigate","login","uri","avatar_url","image","justifyContent","alignItems","username","bio","fetch","then","res","json","data","url","AppNavigator","Home","screen","headerMode","navigationOptions","headerVisible","initialRoute","App","StyleSheet","create","fontSize","textAlign","width"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, {useState, useEffect} from 'react';\nimport {Dimensions, StyleSheet, Text, View, ScrollView, Image, TouchableWithoutFeedback} from 'react-native';\nimport {createAppContainer} from 'react-navigation';\nimport {createStackNavigator} from 'react-navigation-stack';\nimport Header from './components/Header';\nconst {height} = Dimensions.get('window')\n\nfunction followers(screenProps) {\n  const [followers, setFollowers] = useState([]);\n  const user = screenProps.navigation.state.params.user\n  useEffect(() => {\n    loadData()\n  },[]);\n  console.log(navigator)\n  return (\n    <View style={{flex: 1}}>\n      <Header headerTitle='Github Social Club'/>\n      <ScrollView style={styles.container}>{\n        followers.map((follower) => {\n          return(\n            <View key={follower.id} style={{flexDirection: 'row', backgroundColor: 'ghostwhite'}}>\n              <TouchableWithoutFeedback onPress={() => screenProps.navigation.navigate('Home', {user : follower.login})}>\n                <Image source={{uri: follower.avatar_url}} style={styles.image}/>\n                <View style={{flex : 1, flexDirection : 'column', justifyContent : 'flex-start', alignItems:'center'}}>\n                  <Text style={styles.username}>{follower.login}</Text>\n                  <Text style={styles.bio}>{follower.bio}</Text>\n                </View>\n              </TouchableWithoutFeedback>\n            </View>\n          )\n        })\n      }</ScrollView>\n    </View>\n  );\n\n  async function loadData() {\n    const data = await fetch(\"https://api.github.com/users/\" + user + \"/followers\")\n          .then(res=>res.json())\n    for(let follower of data) {\n      follower.bio = await fetch(follower.url).then(data => data.json()).then(data=>data.bio)\n    }\n    setFollowers(data)\n  }\n}\n\nconst AppNavigator = createStackNavigator(\n  {\n    Home: { screen : followers,\n            params : {user : 'Unn4m3DD'},\n          }\n  },\n  {\n    headerMode: 'none',\n    navigationOptions: {\n      headerVisible: false,\n    },\n    initialRoute: 'Home'\n  })\n\n  const App = createAppContainer(AppNavigator);\n\n  export default App;\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'black',\n  },\n  username: {\n    fontSize: 20,\n    textAlign: 'center',\n  },\n  bio : {\n    justifyContent:'flex-start',\n  },\n  image: {\n    width: 100,\n    height: 100,\n  }\n});\n"]},"metadata":{},"sourceType":"module"}